#inputs
input CreateUserInput {
    name: String!
    email: String!
    password: String!
}
input UserSignInInput {
    email: String!
    password: String!
}
input CreatePostInput {
    tweet: String!
}
input CreateCommentInput {
    postId: String!
    comment: String!
}
input FollowUserInput {
    userId: String!
}
input UnfollowUserInput {
    userId: String!
}

# outputs
type SignInOutput {
    name: String!
    email: String!
    password: String!
    token: String!
}

# types
type User {
    id: ID!
    name: String!
    email: String!
    password: String!
    posts: [Post]
    followers: [User]
    followings: [User]
}
type Post {
    id: ID!
    tweet: String!
    comments: [Comment!]!
    createdBy: User!
}
type Comment {
    id: ID!
    comment: String!
    createdBy: User!
}

# query and mutation
type Query {
    getUserPosts(userId: ID!): [Post!]
}

type Mutation {
    createUser(input: CreateUserInput!): User!
    signInUser(input: UserSignInInput!): SignInOutput!
    createPost(input: CreatePostInput!): Post!
    createComment(input: CreateCommentInput!): Comment!
    followUser(input: FollowUserInput!): User!
    unfollowUser(input: UnfollowUserInput!): User!
}